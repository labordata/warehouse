# This is a basic workflow to help you get started with Actions

name: Update Database

concurrency: 
  group: database-build


# Controls when the action will run. 
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '15 10 * * *'    

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
            workload_identity_provider: 'projects/450850437809/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider'
            service_account: 'github-deploy-labordata@labordata.iam.gserviceaccount.com'
      - name: Set up Cloud Run
        uses: google-github-actions/setup-gcloud@v0
      - name: set longer cloud build timeout
        run: |
          gcloud config set builds/timeout 1800
          gcloud config get builds/timeout
      - name: dependencies
        run: |
          pip install sqlite-utils
          pip install https://github.com/fgregg/datasette/archive/refs/heads/no_limit_csv_publish.zip
      - name: get databases
        run: |
          wget https://github.com/labordata/nlrb-data/releases/download/nightly/farber.db.zip
          wget https://github.com/labordata/nlrb-data/releases/download/nightly/nlrb.db.zip
          wget http://labordata.github.io/fmcs-f7/f7.db.zip
          wget https://github.com/labordata/opdr/releases/download/2021-05-31/opdr.db.zip
          wget https://github.com/labordata/nlrb-cats/releases/download/db/nlrb.sqlite.zip
          wget https://github.com/labordata/nlrb-voluntary-recognitions/raw/main/voluntary_recognitions.db
          wget https://github.com/labordata/fmcs-work-stoppage/raw/main/work_stoppages.db
          wget https://github.com/labordata/lm20/releases/download/nightly/lm20.db.zip
          wget https://github.com/labordata/CHIPS/releases/download/current/chips.db.zip
          wget https://github.com/labordata/osha-enforcement/releases/download/nightly/osha_enforcement.db.zip
          wget https://github.com/labordata/whd-compliance/releases/download/nightly/whisard.db.zip
          unzip farber.db.zip
          unzip nlrb.db.zip
          unzip f7.db.zip
          unzip opdr.db.zip
          unzip nlrb.sqlite.zip
          mv nlrb.sqlite cats.db
          unzip lm20.db.zip
          unzip chips.db.zip
          unzip osha_enforcement.db.zip
          unzip whisard.db.zip
          sqlite-utils enable-fts opdr.db lm_data union_name aff_abbr unit_name desiq_pre desig_num desig_suf street_adr city state zip
          sqlite-utils enable-fts f7.db f7 union_name union_street union_city union_state union_zip          
          echo "analyze; vacuum;" | sqlite3 f7.db
          echo "analyze; vacuum;" | sqlite3 nlrb.db
          echo "analyze; vacuum;" | sqlite3 opdr.db
          echo "analyze; vacuum;" | sqlite3 cats.db
          echo "analyze; vacuum;" | sqlite3 voluntary_recognitions.db
          echo "analyze; vacuum;" | sqlite3 work_stoppages.db
          echo "analyze; vacuum;" | sqlite3 lm20.db
          echo "analyze; vacuum;" | sqlite3 chips.db
          echo "analyze; vacuum;" | sqlite3 osha_enforcement.db
          echo "analyze; vacuum;" | sqlite3 whisard.db

      - name: Deploy to Cloudrun
        run: |
          gcloud config set run/region us-central1
          gcloud config set project labordata          
          datasette publish cloudrun f7.db nlrb.db opdr.db cats.db voluntary_recognitions.db work_stoppages.db lm20.db chips.db osha_enforcement.db whisard.db \
            --memory 8Gi \
            --cpu 2 \
            --service warehouse \
            -m warehouse_metadata.yml \
            --template-dir=templates/ \
            --extra-options="--crossdb --setting sql_time_limit_ms 100000 --cors --setting facet_time_limit_ms 500 --setting allow_facet off --setting trace_debug 1" \
            --install=datasette-atom \
            --install=datasette-rure \
            --install=pysqlite3-binary \
            --install=datasette-hashed-urls \
            --install=datasette-block-robots \
            --install=datasette-pretty-traces \
            --version-note=$GITHUB_RUN_NUMBER
      - name: keepalive
        uses: gautamkrishnar/keepalive-workflow@v1            
